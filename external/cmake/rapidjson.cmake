include(ExternalProject)

# Install Rapid JSON
set( EXTERNAL_PROJECT_NAME ext_rapidjson )

# Configure build arguments
set( EXTERNAL_CMAKE_ARGS "" )

list( APPEND EXTERNAL_CMAKE_ARGS -DRAPIDJSON_BUILD_DOC=OFF )
list( APPEND EXTERNAL_CMAKE_ARGS -DRAPIDJSON_BUILD_EXAMPLES=OFF )
list( APPEND EXTERNAL_CMAKE_ARGS -DRAPIDJSON_BUILD_TESTS=OFF )

# Add configure install directories
#list( APPEND EXTERNAL_CMAKE_ARGS -DCMAKE_INSTALL_LIBDIR=${EXTERNAL_DIR}/library ) 
#list( APPEND EXTERNAL_CMAKE_ARGS -DCMAKE_INSTALL_INCLUDEDIR=${EXTERNAL_DIR}/include )
list( APPEND EXTERNAL_CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${EXTERNAL_DIR} ) 

# Add cross compiler arguments to build arguments
list( APPEND EXTERNAL_CMAKE_ARGS ${EXTERNAL_BUILD_ARGS} )
#list( APPEND EXTERNAL_CMAKE_ARGS "-DCMAKE_CXX_FLAGS -march=armv7-a" )

# Create external project
ExternalProject_Add( ${EXTERNAL_PROJECT_NAME}
	GIT_REPOSITORY https://github.com/Tencent/rapidjson.git
	GIT_TAG master
	GIT_PROGRESS ON

	UPDATE_DISCONNECTED ${EXTERNAL_UPDATE}

# Customize the build command such that =march is compaatible
# - Figrue wich build flags are used at the momemtn
#	BUILD_COMMAND ""

	DOWNLOAD_DIR    "${EXTERNAL_DIR}/${EXTERNAL_PROJECT_NAME}"
	SOURCE_DIR      "${EXTERNAL_DIR}/${EXTERNAL_PROJECT_NAME}"
	BINARY_DIR      "${EXTERNAL_DIR}/${EXTERNAL_PROJECT_NAME}"
	INSTALL_DIR     "${EXTERNAL_DIR}/${EXTERNAL_PROJECT_NAME}"

	TMP_DIR         "${EXTERNAL_TMP_DIR}/${EXTERNAL_PROJECT_NAME}"
	STAMP_DIR       "${EXTERNAL_STAMP_DIR}/${EXTERNAL_PROJECT_NAME}"
	LOG_DIR         "${EXTERNAL_LOG_DIR}/${EXTERNAL_PROJECT_NAME}"

	CMAKE_ARGS 	${EXTERNAL_CMAKE_ARGS} 
)
